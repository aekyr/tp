"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkForVueHydrationViolation = void 0;
const cheerio_1 = __importDefault(require("cheerio"));
const logger = __importStar(require("./logger"));
function logWarningForMissingTbody(rootNode, path) {
    const tables = rootNode('table');
    for (let i = 0; i < tables.length; i += 1) {
        const table = rootNode(tables[i]);
        if (table.find('tbody').length === 0) {
            logger.error(`Invalid HTML in ${path}.\n`
                + 'Table must have a tbody tag. Please correct this to avoid Vue hydration issues.\n');
        }
    }
}
function checkForVueHydrationViolation(content, path) {
    const $ = cheerio_1.default.load(content);
    logWarningForMissingTbody($, path);
}
exports.checkForVueHydrationViolation = checkForVueHydrationViolation;
//# sourceMappingURL=htmlValidationUtil.js.map