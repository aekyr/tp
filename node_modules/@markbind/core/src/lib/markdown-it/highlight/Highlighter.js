"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Highlighter = void 0;
const helper_1 = require("./helper");
class Highlighter {
    static highlightWholeLine(code) {
        return `<span class="highlighted">${code}\n</span>`;
    }
    static highlightWholeText(code) {
        const [indents, content] = (0, helper_1.splitCodeAndIndentation)(code);
        return `<span>${indents}<span class="highlighted">${content}</span>\n</span>`;
    }
    static highlightPartOfText(code, bounds) {
        /*
          * Note: As part-of-text highlighting requires walking over the node of the generated
          * html by highlight.js, highlighting will be applied in NodeProcessor instead.
          * hl-data is used to pass over the bounds.
        */
        const mergedBounds = (0, helper_1.collateAllIntervals)(bounds);
        const dataStr = mergedBounds.map(bound => bound.join('-')).join(',');
        const formattedCode = code.replace(/\t/g, '    '); // Convert tabs to 4 spaces by default
        return `<span hl-data=${dataStr}>${formattedCode}\n</span>`;
    }
}
exports.Highlighter = Highlighter;
//# sourceMappingURL=Highlighter.js.map